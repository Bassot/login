{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserHttpService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080';\n  }\n  createOptions(params = {}) {\n    return {\n      headers: new HttpHeaders({\n        'cache-control': 'no-cache',\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  register(user) {\n    return this.http.post(this.url + '/signup', user, this.createOptions());\n  }\n}\nUserHttpService.ɵfac = function UserHttpService_Factory(t) {\n  return new (t || UserHttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserHttpService,\n  factory: UserHttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAK5D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADjB,QAAG,GAAG,uBAAuB;EACI;EAEhCC,aAAa,CAACC,MAAM,GAAG,EAAE;IAC/B,OAAO;MACLC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,eAAe,EAAE,UAAU;QAC3B,cAAc,EAAE;OACjB;KACF;EACH;EAEAO,QAAQ,CAACC,IAAS;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,SAAS,EAAEF,IAAI,EAAE,IAAI,CAACJ,aAAa,EAAE,CAAC;EACzE;;AAfWH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["HttpHeaders","UserHttpService","constructor","http","createOptions","params","headers","register","user","post","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\basso\\Documents\\Unive\\Taw2023\\login\\Client\\loginProject\\src\\app\\user-http.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserHttpService {\n  public url = 'http://localhost:8080';\n  constructor(private http: HttpClient) { }\n\n  private createOptions(params = {}){\n    return {\n      headers: new HttpHeaders({\n        'cache-control': 'no-cache',\n        'Content-Type': 'application/json',\n      })\n    };\n  }\n\n  register(user: any){\n    return this.http.post(this.url + '/signup', user, this.createOptions());\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}